<?xml version="1.0"?>
<registry>
  <records interface="Products.CMFPlone.interfaces.IEditingSchema"
           prefix="plone" />
  <records interface="Products.CMFPlone.interfaces.ILanguageSchema"
           prefix="plone" />
  <records interface="Products.CMFPlone.interfaces.IFilterSchema"
           prefix="plone" />
  <records interface="Products.CMFPlone.interfaces.IMaintenanceSchema"
           prefix="plone" />
  <records interface="Products.CMFPlone.interfaces.IMailSchema"
           prefix="plone" />
  <records interface="Products.CMFPlone.interfaces.INavigationSchema"
           prefix="plone" />
  <records interface="Products.CMFPlone.interfaces.ISearchSchema"
           prefix="plone" />
  <records interface="Products.CMFPlone.interfaces.ISecuritySchema"
           prefix="plone" />
  <records interface="Products.CMFPlone.interfaces.ISiteSchema"
           prefix="plone" />
  <records interface="Products.CMFPlone.interfaces.IDateAndTimeSchema"
           prefix="plone" />
  <records interface="Products.CMFPlone.interfaces.IMarkupSchema"
           prefix="plone" />
  <records interface="Products.CMFPlone.interfaces.IUserGroupsSettingsSchema"
           prefix="plone" />
  <records interface="Products.CMFPlone.interfaces.ISocialMediaSchema"
           prefix="plone" />
  <records interface="Products.CMFPlone.interfaces.ITypesSchema"
           prefix="plone" />
  <records interface="Products.CMFPlone.interfaces.IImagingSchema"
           prefix="plone" />
  <records interface="Products.CMFPlone.interfaces.ILoginSchema"
           prefix="plone" />
  <records interface="Products.CMFPlone.interfaces.ILinkSchema"
           prefix="plone" />
  <record interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings" field="resourceBundlesForThemes">
    <value purge="false">
      <element key="(default)">
        <element>jquery</element>
        <element>default</element>
      </element>
    </value>
  </record>
  <record name="Products.CMFPlone.i18nl10n.override_dateformat.Enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
      <description>Override the translation machinery</description>
    </field>
    <value>False</value>
  </record>
  <record name="Products.CMFPlone.i18nl10n.override_dateformat.date_format_long">
    <field type="plone.registry.field.ASCIILine">
      <title>old ZMI property: localLongTimeFormat</title>
      <description>Default value: %Y-%m-%d %H:%M (2038-01-19 03:14)</description>
    </field>
    <value>%Y-%m-%d %H:%M</value>
  </record>
  <record name="Products.CMFPlone.i18nl10n.override_dateformat.date_format_short">
    <field type="plone.registry.field.ASCIILine">
      <title>old ZMI property: localTimeFormat</title>
      <description>Default value: %Y-%m-%d (2038-01-19)</description>
    </field>
    <value>%Y-%m-%d</value>
  </record>
  <record name="Products.CMFPlone.i18nl10n.override_dateformat.time_format">
    <field type="plone.registry.field.ASCIILine">
      <title>old ZMI property: localTimeOnlyFormat</title>
      <description>Default value: %H:%M (03:14)</description>
    </field>
    <value>%H:%M</value>
  </record>
  <record name="plone.app.layout.globals.bodyClass.depth">
    <field type="plone.registry.field.Int">
      <title>Body class path depth</title>
      <description>Depth relative the site root that body class are generated for.
      </description>
    </field>
    <value>4</value>
  </record>
  <record name="plone.app.portlets.PortletManagerBlacklist">
    <field type="plone.registry.field.List">
      <title>Toolbar Portlet Manager Blacklist</title>
      <description>A list of portlet manager names that will not be shown in the toolbar dropdown</description>
      <value_type type="plone.registry.field.TextLine" />
    </field>
    <value purge="false">
      <element>plone.dashboard1</element>
      <element>plone.dashboard2</element>
      <element>plone.dashboard3</element>
      <element>plone.dashboard4</element>
    </value>
  </record>
  <records interface="Products.CMFPlone.interfaces.syndication.ISiteSyndicationSettings" />
  <records interface="Products.CMFPlone.interfaces.ITinyMCESchema"
           prefix="plone">
    <value key="content_css">
      <element>++plone++static/components/tinymce-builded/js/tinymce/skins/lightgray/content.min.css</element>
    </value>
  </records>
  <record name="plone.resources.development">
    <field type="plone.registry.field.Bool">
      <title>Frontend development mode</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.resources.requirejs">
    <field type="plone.registry.field.ASCII">
      <title>URL of require.js</title>
    </field>
    <value>++plone++static/components/requirejs/require.js</value>
  </record>
  <record name="plone.resources.configjs">
    <field type="plone.registry.field.ASCII">
      <title>config.js</title>
    </field>
    <value>config.js</value>
  </record>
  <record name="plone.resources.lessc">
    <field type="plone.registry.field.ASCII">
      <title>URL of less.js</title>
    </field>
    <value>++plone++static/components/less/dist/less.js</value>
  </record>
  <record name="plone.resources.less-modify">
    <field type="plone.registry.field.ASCII">
      <title>less-modify js</title>
    </field>
    <value>less-modify.js</value>
  </record>


  <records prefix="plone.resources/less"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/less/dist/less.js</value>
  </records>

  <record name="plone.resources.less-variables">
      <field type="plone.registry.field.ASCII">
        <title>LESS variables js definer</title>
      </field>
      <value key="js">less-variables.js</value>
  </record>

  <!-- mockup core reqs -->
  <records prefix="plone.resources/mockup-patterns-base"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/base/pattern.js</value>
  </records>

  <records prefix="plone.resources/jquery"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/jquery/dist/jquery.min.js</value>
  </records>


  <records prefix="plone.resources/JSXTransformer"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/react/JSXTransformer.js</value>
      <value key="export">window.JSXTransformer</value>
  </records>

  <records prefix="plone.resources/underscore"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/underscore/underscore.js</value>
      <value key="export">window._</value>
  </records>

  <records prefix="plone.resources/backbone"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/backbone/backbone.js</value>
      <value key="export">window.Backbone</value>
      <value key="deps">underscore,jquery</value>
  </records>

  <records prefix="plone.resources/backbone.paginator"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/backbone.paginator/lib/backbone.paginator.js</value>
      <value key="export">window.Backbone.Paginator</value>
      <value key="deps">backbone</value>
  </records>

  <records prefix="plone.resources/bootstrap-variables"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="css">
        <element>++plone++static/components/bootstrap/less/variables.less</element>
      </value>
  </records>
  <records prefix="plone.resources/bootstrap-mixins"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="css">
        <element>++plone++static/components/bootstrap/less/mixins.less</element>
      </value>
  </records>

  <records prefix="plone.resources/bootstrap-basic"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="css">
        <element>++plone++static/components/bootstrap/less/utilities.less</element>
        <element>++plone++static/components/bootstrap/less/forms.less</element>
        <element>++plone++static/components/bootstrap/less/navs.less</element>
        <element>++plone++static/components/bootstrap/less/navbar.less</element>
      </value>
  </records>

  <records prefix="plone.resources/bootstrap-progress-bars"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="css">
        <element>++plone++static/components/bootstrap/less/progress-bars.less</element>
      </value>
  </records>

  <records prefix="plone.resources/bootstrap-modal"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="css">
        <element>++plone++static/components/bootstrap/less/modals.less</element>
      </value>
  </records>

  <records prefix="plone.resources/bootstrap-button-groups"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="css">
        <element>++plone++static/components/bootstrap/less/button-groups.less</element>
      </value>
  </records>

  <records prefix="plone.resources/bootstrap-buttons"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="css">
        <element>++plone++static/components/bootstrap/less/buttons.less</element>
        <element>++plone++static/components/bootstrap/less/close.less</element>
      </value>
  </records>

  <records prefix="plone.resources/bootstrap-alert"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/bootstrap/js/alert.js</value>
      <value key="deps">jquery</value>
  </records>

  <records prefix="plone.resources/bootstrap-dropdown"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/bootstrap/js/dropdown.js</value>
      <value key="css">
        <element>++plone++static/components/bootstrap/less/dropdowns.less</element>
      </value>
      <value key="deps">jquery</value>
  </records>

  <records prefix="plone.resources/bootstrap-collapse"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/bootstrap/js/collapse.js</value>
      <value key="deps">jquery</value>
      <value key="export">window.jQuery.fn.collapse.Constructor</value>
  </records>

  <records prefix="plone.resources/bootstrap-tooltip"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/bootstrap/js/tooltip.js</value>
      <value key="deps">jquery</value>
  </records>

  <records prefix="plone.resources/bootstrap-transition"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/bootstrap/js/transition.js</value>
      <value key="deps">jquery</value>
      <value key="export">window.jQuery.support.transition</value>
  </records>

  <records prefix="plone.resources/bootstrap-glyphicons"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="css">
        <element>++plone++static/components/bootstrap/less/glyphicons.less</element>
      </value>
  </records>

  <records prefix="plone.resources/bootstrap-badges"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="css">
        <element>++plone++static/components/bootstrap/less/badges.less</element>
      </value>
  </records>

  <records prefix="plone.resources/dropzone"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/dropzone/dist/dropzone-amd-module.js</value>
      <value key="css">
        <element>++plone++static/components/dropzone/dist/dropzone.css</element>
      </value>
  </records>

  <records prefix="plone.resources/expect"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/expect/index.js</value>
      <value key="export">window.expect</value>
  </records>

  <records prefix="plone.resources/jquery.cookie"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/jquery.cookie/jquery.cookie.js</value>
      <value key="deps">jquery</value>
  </records>

  <records prefix="plone.resources/jqtree"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/jqtree/tree.jquery.js</value>
      <value key="deps">jquery</value>
      <value key="css">
        <element>++plone++static/components/jqtree/jqtree.css</element>
      </value>
  </records>

  <records prefix="plone.resources/jquery.form"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/jquery-form/jquery.form.js</value>
  </records>

  <records prefix="plone.resources/marked"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/marked/lib/marked.js</value>
  </records>

  <records prefix="plone.resources/moment"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/moment/min/moment-with-locales.min.js</value>
  </records>

  <records prefix="plone.resources/picker"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/pickadate/lib/picker.js</value>
      <value key="css">
        <element>++plone++static/components/pickadate/lib/themes/classic.css</element>
      </value>
  </records>

  <records prefix="plone.resources/picker.date"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/pickadate/lib/picker.date.js</value>
      <value key="css">
        <element>++plone++static/components/pickadate/lib/themes/classic.date.css</element>
      </value>
      <value key="deps">picker</value>
  </records>

  <records prefix="plone.resources/picker.time"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/pickadate/lib/picker.time.js</value>
      <value key="css">
        <element>++plone++static/components/pickadate/lib/themes/classic.time.css</element>
      </value>
      <value key="deps">picker</value>
  </records>

  <records prefix="plone.resources/react"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/react/react.js</value>
  </records>

  <records prefix="plone.resources/select2"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/select2/select2.js</value>
      <value key="css">
        <element>++plone++static/components/select2/select2.css</element>
      </value>
  </records>

  <records prefix="plone.resources/sinon"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/sinonjs/sinon.js</value>
      <value key="export">window.sinon</value>
  </records>

  <records prefix="plone.resources/text"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/requirejs-text/text.js</value>
  </records>

  <records prefix="plone.resources/jquery.event.drag"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockuplib/jquery.event.drag.js</value>
      <value key="deps">jquery</value>
  </records>

  <records prefix="plone.resources/jquery.event.drop"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockuplib/jquery.event.drop.js</value>
      <value key="deps">jquery</value>
      <value key="export">$.drop</value>
  </records>

  <records prefix="plone.resources/tinymce-advlist"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/advlist/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-compat3x"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/compat3x/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>

  <records prefix="plone.resources/tinymce-anchor"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/anchor/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-autolink"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/autolink/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-autoresize"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/autoresize/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-autosave"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/autosave/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-bbcode"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/bbcode/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-charmap"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/charmap/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-code"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/code/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-colorpicker"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/colorpicker/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-contextmenu"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/contextmenu/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-directionality"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/directionality/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-emoticons"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/emoticons/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-fullpage"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/fullpage/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-fullscreen"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/fullscreen/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-hr"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/hr/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-image"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/image/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-importcss"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/importcss/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-insertdatetime"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/insertdatetime/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-layer"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/layer/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-legacyoutput"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/legacyoutput/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-link"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/link/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-lists"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/lists/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-media"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/media/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-nonbreaking"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/nonbreaking/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-noneditable"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/noneditable/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-pagebreak"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/pagebreak/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-paste"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/paste/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-preview"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/preview/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-print"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/print/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-save"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/save/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-searchreplace"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/searchreplace/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-spellchecker"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/spellchecker/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-tabfocus"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/tabfocus/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-table"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/table/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-template"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/template/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-textcolor"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/textcolor/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-textpattern"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/textpattern/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-visualblocks"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/visualblocks/plugin.js</value>
      <value key="css">
        <element>++plone++static/components/tinymce-builded/js/tinymce/plugins/visualblocks/css/visualblocks.css</element>
      </value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-visualchars"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/visualchars/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-wordcount"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/plugins/wordcount/plugin.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-modern-theme"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/themes/modern/theme.js</value>
      <value key="deps">tinymce</value>
  </records>
  <records prefix="plone.resources/tinymce-default-styles"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="css">
        <element>++plone++static/tinymce-styles.css</element>
      </value>
  </records>


  <records prefix="plone.resources/tinymce"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/tinymce-builded/js/tinymce/tinymce.js</value>
      <value key="export">window.tinyMCE</value>
      <value key="init">function () { this.tinyMCE.DOM.events.domLoaded = true; return this.tinyMCE; }</value>
      <value key="css">
        <element>++plone++static/components/tinymce-builded/js/tinymce/skins/lightgray/skin.less</element>
        <element>++plone++static/components/tinymce-builded/js/tinymce/skins/lightgray/Content.less</element>
      </value>
  </records>

  <records prefix="plone.resources/mockup-popover"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="css">
        <element>++resource++mockupless/popover.less</element>
      </value>
  </records>

  <records prefix="plone.resources/mockup-router"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockupjs/router.js</value>
  </records>

  <records prefix="plone.resources/mockup-utils"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockupjs/utils.js</value>
  </records>

  <records prefix="plone.resources/mockup-i18n"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockupjs/i18n.js</value>
  </records>

  <records prefix="plone.resources/translate"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockupjs/i18n-wrapper.js</value>
  </records>

 <!-- Patterns -->

  <records prefix="plone.resources/plone-patterns-toolbar"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/patterns/toolbar/src/toolbar.js</value>
      <value key="css">
        <element>++plone++static/patterns/toolbar/src/css/toolbar.plone.less</element>
      </value>
  </records>

  <records prefix="plone.resources/mockup-patterns-autotoc"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/autotoc/pattern.js</value>
      <value key="css">
        <element>++resource++mockup/autotoc/pattern.autotoc.less</element>
      </value>
  </records>

  <records prefix="plone.resources/mockup-patterns-backdrop"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/backdrop/pattern.js</value>
  </records>

  <records prefix="plone.resources/mockup-patterns-contentloader"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/contentloader/pattern.js</value>
  </records>

  <records prefix="plone.resources/mockup-patterns-cookietrigger"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/cookietrigger/pattern.js</value>
  </records>

  <records prefix="plone.resources/mockup-patterns-sortable"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/sortable/pattern.js</value>
  </records>

  <records prefix="plone.resources/mockup-patterns-formautofocus"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/formautofocus/pattern.js</value>
  </records>

  <records prefix="plone.resources/mockup-patterns-formunloadalert"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/formunloadalert/pattern.js</value>
  </records>

  <records prefix="plone.resources/mockup-patterns-inlinevalidation"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/inlinevalidation/pattern.js</value>
  </records>

  <records prefix="plone.resources/mockup-patterns-markspeciallinks"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/markspeciallinks/pattern.js</value>
      <value key="css">
        <element>++resource++mockup/markspeciallinks/pattern.markspeciallinks.less</element>
      </value>
  </records>

  <records prefix="plone.resources/mockup-patterns-modal"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/modal/pattern.js</value>
      <value key="css">
        <element>++resource++mockup/modal/pattern.modal.less</element>
      </value>
  </records>

  <records prefix="plone.resources/mockup-patterns-moment"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/moment/pattern.js</value>
  </records>

  <records prefix="plone.resources/mockup-patterns-pickadate"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/pickadate/pattern.js</value>
      <value key="css">
        <element>++resource++mockup/pickadate/pattern.pickadate.less</element>
      </value>
  </records>

  <records prefix="plone.resources/mockup-patterns-preventdoublesubmit"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/preventdoublesubmit/pattern.js</value>
  </records>

  <records prefix="plone.resources/mockup-patterns-querystring"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/querystring/pattern.js</value>
      <value key="css">
        <element>++resource++mockup/querystring/pattern.querystring.less</element>
      </value>
  </records>

  <records prefix="plone.resources/mockup-patterns-recurrence"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/recurrence/pattern.js</value>
      <value key="css">
        <element>++resource++mockup/recurrence/pattern.recurrence.less</element>
      </value>
  </records>

  <records prefix="plone.resources/mockup-patterns-relateditems"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/relateditems/pattern.js</value>
      <value key="css">
        <element>++resource++mockup/relateditems/pattern.relateditems.less</element>
      </value>
      <value key="url">++resource++mockup/relateditems</value>
  </records>

  <records prefix="plone.resources/mockup-patterns-relateditems-upload"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/relateditems/upload.js</value>
  </records>

  <records prefix="plone.resources/mockup-patterns-select2"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/select2/pattern.js</value>
      <value key="css">
        <element>++resource++mockup/select2/pattern.select2.less</element>
      </value>
  </records>

  <records prefix="plone.resources/mockup-patterns-livesearch"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/livesearch/pattern.js</value>
      <value key="css">
        <element>++resource++mockup/livesearch/pattern.livesearch.less</element>
      </value>
  </records>

  <records prefix="plone.resources/mockup-patterns-resourceregistry"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="url">++resource++mockup/resourceregistry</value>
      <value key="js">++resource++mockup/resourceregistry/pattern.js</value>
      <value key="css">
        <element>++resource++mockup/resourceregistry/pattern.resourceregistry.less</element>
      </value>
  </records>

  <records prefix="plone.resources/mockup-patterns-structure"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/structure/pattern.js</value>
      <value key="url">++resource++mockup/structure</value>
      <value key="css">
        <element>++resource++mockup/structure/less/pattern.structure.less</element>
      </value>
  </records>

  <records prefix="plone.resources/mockup-patterns-upload"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/upload/pattern.js</value>
      <value key="url">++resource++mockup/upload</value>
      <value key="css">
        <element>++resource++mockup/upload/less/pattern.upload.less</element>
      </value>
  </records>

  <records prefix="plone.resources/mockup-patterns-textareamimetypeselector"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/textareamimetypeselector/pattern.js</value>
  </records>

  <records prefix="plone.resources/mockup-patterns-tinymce"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/tinymce/pattern.js</value>
      <value key="url">++resource++mockup/tinymce</value>
      <value key="css">
        <element>++resource++mockup/tinymce/less/pattern.tinymce.less</element>
      </value>
  </records>

  <records prefix="plone.resources/mockup-patterns-toggle"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/toggle/pattern.js</value>
  </records>

  <records prefix="plone.resources/mockup-patterns-tooltip"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/tooltip/pattern.js</value>
      <value key="css">
        <element>++resource++mockup/tooltip/pattern.tooltip.less</element>
      </value>
  </records>

  <records prefix="plone.resources/mockup-patterns-tree"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/tree/pattern.js</value>
      <value key="css">
        <element>++resource++mockup/tree/pattern.tree.less</element>
      </value>
  </records>

  <records prefix="plone.resources/mockup-patterns-texteditor"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++mockup/texteditor/pattern.js</value>
  </records>
  <records prefix="plone.resources/plone-patterns-portletmanager"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
    <value key="js">++resource++manage-portlets.js</value>
  </records>

  <!-- ace resources -->
  <records prefix="plone.resources/ace"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/ace-builds/src/ace.js</value>
  </records>
  <records prefix="plone.resources/ace-theme-monokai"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/ace-builds/src/theme-monokai.js</value>
  </records>
  <records prefix="plone.resources/ace-mode-text"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/ace-builds/src/mode-text.js</value>
  </records>
  <records prefix="plone.resources/ace-mode-javascript"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/ace-builds/src/mode-javascript.js</value>
  </records>
  <records prefix="plone.resources/ace-mode-css"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/ace-builds/src/mode-css.js</value>
  </records>

  <records prefix="plone.resources/mockup-ui"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="url">++resource++mockupjs/ui</value>
  </records>

  <records prefix="plone.resources/rjs"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/r.js/dist/r.js</value>
  </records>

  <!-- patternslib dependencies -->
  <records prefix="plone.resources/pat-base"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/patternslib/src/core/base.js</value>
  </records>
  <records prefix="plone.resources/pat-compat"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/patternslib/src/core/compat.js</value>
  </records>
  <records prefix="plone.resources/pat-registry"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/patternslib/src/core/registry.js</value>
  </records>
  <records prefix="plone.resources/pat-jquery-ext"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/patternslib/src/core/jquery-ext.js</value>
  </records>
  <records prefix="plone.resources/pat-logger"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/patternslib/src/core/logger.js</value>
  </records>
  <records prefix="plone.resources/pat-utils"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/patternslib/src/core/utils.js</value>
  </records>
  <records prefix="plone.resources/pat-mockup-parser"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/patternslib/src/core/mockup-parser.js</value>
  </records>
  <records prefix="plone.resources/logging"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/logging/src/logging.js</value>
  </records>
  <records prefix="plone.resources/jquery.browser"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/jquery.browser/dist/jquery.browser.js</value>
      <value key="deps">jquery</value>
  </records>


  <!-- recurrence widget registrations -->
  <records prefix="plone.resources/jquery.recurrenceinput"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/jquery.recurrenceinput.js/src/jquery.recurrenceinput.js</value>
      <!-- Perhaps a bit wonky here for now, depending on legacy jquery tools stuff here -->
      <value key="css">
        <element>++plone++static/components/jquery.recurrenceinput.js/src/jquery.recurrenceinput.css</element>
      </value>
      <value key="deps">jquery,resource-plone-app-jquerytools-js,resource-plone-app-jquerytools-dateinput-js,jquery.tmpl</value>
  </records>
  <records prefix="plone.resources/resource-plone-app-jquerytools-dateinput-js"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tools.dateinput.js</value>
      <value key="css">
        <element>++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tools.dateinput.css</element>
      </value>
      <value key="deps">jquery</value>
  </records>
  <records prefix="plone.resources/resource-plone-app-jquerytools-js"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tools.overlay.js</value>
      <value key="css">
        <element>++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tools.overlay.css</element>
      </value>
      <value key="deps">jquery</value>
  </records>
  <records prefix="plone.resources/jquery.tmpl"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tmpl.js</value>
      <value key="deps">jquery</value>
  </records>
  <!-- legacy js -->


  <records prefix="plone.resources/jquery-highlightsearchterms"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">jquery.highlightsearchterms.js</value>
  </records>

  <record name="plone.resources.last_legacy_import">
    <field type="plone.registry.field.Datetime">
      <title>Last legacy js/css import date</title>
      <description>It's used to decide if its needed to compile or not the production css/js</description>
    </field>
    <value>2014-08-14 00:00:00</value>
  </record>


  <!-- Mixins vars for less with the paths -->
  <record name="plone.lessvariables">
    <field type="plone.registry.field.Dict">
      <title>Less variables</title>
      <description>Variables that are going to be compiled on less</description>
      <key_type type="plone.registry.field.ASCIILine" />
      <value_type type="plone.registry.field.TextLine" />
    </field>
    <value>
      <element key="icon-font-path">\"../fonts/\"</element>
      <element key="bowerPath">\"{site_url}/++plone++static/components/\"</element>
      <element key="mockupPath">\"{site_url}/++resource++mockup/\"</element>
      <element key="mockuplessPath">\"{site_url}/++resource++mockupless/\"</element>

      <element key="plone-link-color">rgba(0,123,179,1)</element>
      <element key="plone-gray-lighter">lighten(#000, 80%)</element>
      <element key="plone-gray-light">lighten(#000, 46.5%)</element>

      <element key="plone-toolbar-bg">rgba(0,0,0,.9)</element>
      <element key="plone-toolbar-submenu-bg">rgba(45,45,45,.96)</element>
      <element key="plone-toolbar-submenu-width">180px</element>
      <element key="plone-toolbar-font-primary">Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif</element>
      <element key="plone-toolbar-font-secondary">Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif</element>
      <element key="plone-toolbar-separator-color">rgba(255,255,255,.17)</element>
      <element key="plone-toolbar-link">{plone-link-color}</element>
      <element key="plone-toolbar-text-color">rgba(255,255,255,1)</element>
      <element key="plone-toolbar-submenu-text-color">lighten(#000, 90%)</element>
      <element key="plone-toolbar-submenu-header-color">lighten(#000, 80%)</element>
      <element key="plone-toolbar-published-color">{plone-link-color}</element>
      <element key="plone-toolbar-draft-color">rgb(250,184,42)</element>
      <element key="plone-toolbar-pending-color">rgb(226,231,33)</element>
      <element key="plone-toolbar-private-color">rgb(196,24,60)</element>
      <element key="plone-toolbar-internal-color">rgb(250,184,42)</element>
      <element key="plone-toolbar-internally-published-color">rgb(136,61,250)</element>

      <element key="plone-screen-xs-min">480px</element>
      <element key="plone-screen-sm-min">768px</element>
      <element key="plone-screen-md-min">992px</element>
      <element key="plone-screen-lg-min">1200px</element>

      <element key="plone-left-toolbar-expanded">120px</element>
      <element key="plone-left-toolbar">60px</element>

      <element key="plone-container-sm">750px</element>
      <element key="plone-container-md">970px</element>
      <element key="plone-container-lg">1170px</element>

      <element key="plone-screen-xs-max">(@plone-screen-sm-min + 1)</element>
      <element key="plone-screen-sm-max">(@plone-screen-md-min + 1)</element>
      <element key="plone-screen-md-max">(@plone-screen-lg-min + 1)</element>

    </value>
  </record>


  <!-- Plone bundle resources -->
  <records prefix="plone.resources/plone"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++plone.js</value>
      <value key="css">
        <element>++plone++static/plone.less</element>
      </value>
  </records>
  <records prefix="plone.resources/plone-logged-in"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++plone-logged-in.js</value>
      <value key="css">
        <element>++plone++static/plone-logged-in.less</element>
      </value>
  </records>
  <records prefix="plone.resources/resourceregistry"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/resourceregistry.js</value>
      <value key="css">
        <element>++plone++static/resourceregistry.less</element>
      </value>
  </records>


  <!-- Bundles -->
  <records prefix="plone.bundles/plone"
            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="merge_with">default</value>
    <value key="resources">
      <element>plone</element>
    </value>
    <value key="enabled">True</value>
    <value key="jscompilation">++plone++static/plone-compiled.min.js</value>
    <value key="csscompilation">++plone++static/plone-compiled.css</value>
    <value key="last_compilation">2017-03-02 15:52:00</value>
    <value key="stub_js_modules">
      <element>jquery</element>
    </value>
  </records>

  <records prefix="plone.bundles/plone-logged-in"
            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="merge_with">logged-in</value>
    <value key="resources">
      <element>plone-logged-in</element>
    </value>
    <value key="enabled">True</value>
    <value key="expression">python: member is not None</value>
    <value key="jscompilation">++plone++static/plone-logged-in-compiled.min.js</value>
    <value key="csscompilation">++plone++static/plone-logged-in-compiled.css</value>
    <value key="last_compilation">2017-02-27 17:34:00</value>
    <value key="depends">plone</value>
    <value key="stub_js_modules">
      <element>backbone</element>
      <element>bootstrap-dropdown</element>
      <element>bootstrap-tooltip</element>
      <element>jquery.event.drag</element>
      <element>jquery.event.drop</element>
      <element>jquery.form</element>
      <element>jquery</element>
      <element>mockup-i18n</element>
      <element>mockup-patterns-autotoc</element>
      <element>mockup-patterns-backdrop</element>
      <element>mockup-patterns-base</element>
      <element>mockup-patterns-modal</element>
      <element>mockup-patterns-moment</element>
      <element>mockup-patterns-pickadate</element>
      <element>mockup-patterns-select2</element>
      <element>mockup-router</element>
      <element>mockup-utils</element>
      <element>pat-base</element>
      <element>pat-compat</element>
      <element>pat-logger</element>
      <element>pat-mockup-parser</element>
      <element>pat-registry</element>
      <element>pat-utils</element>
      <element>select2</element>
      <element>translate</element>
      <element>underscore</element>
      <element>moment</element>
    </value>
  </records>

  <records prefix="plone.bundles/plone-legacy"
            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="merge_with">default</value>
    <value key="resources" purge="false">
      <element>jquery-highlightsearchterms</element>
    </value>
    <value key="depends">plone</value>
    <value key="jscompilation">++plone++static/plone-legacy-compiled.js</value>
    <value key="csscompilation">++plone++static/plone-legacy-compiled.css</value>
    <value key="last_compilation">2014-08-14 00:00:00</value>
    <value key="compile">False</value>
    <value key="enabled">True</value>
  </records>

  <records prefix="plone.bundles/resourceregistry"
            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="resources">
      <element>resourceregistry</element>
    </value>
    <value key="enabled">False</value>
    <value key="jscompilation">++plone++static/resourceregistry-compiled.min.js</value>
    <value key="csscompilation">++plone++static/resourceregistry-compiled.css</value>
    <value key="last_compilation">2015-05-01 00:00:00</value>
    <value key="stub_js_modules">
      <element>jquery</element>
    </value>
  </records>


  <record name="plone.patternoptions">
    <field type="plone.registry.field.Dict">
      <title>Patterns configuration</title>
      <description>Base pattern configuration options</description>
      <key_type type="plone.registry.field.ASCIILine" />
      <value_type type="plone.registry.field.Text" />
    </field>
    <value>
      <element key="pickadate">{"date": {"selectYears": 200}, "time": {"interval": 5 } }</element>
      <element key="plone-modal">{"actionOptions": {"displayInModal": false}}</element>
    </value>
  </record>

</registry>
